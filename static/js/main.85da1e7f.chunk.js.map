{"version":3,"sources":["App.js","Components/Display.js","Components/Buttons.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","C_Users_User_JS_js_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_User_JS_js_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_User_JS_js_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","display","handleClick","bind","C_Users_User_JS_js_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleKeyPress","updateDisplay","solveEquation","document","addEventListener","removeEventListener","event","console","log","key","shiftKey","setState","target","classList","contains","innerText","id","info","newDisplay","equation","result","eval","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","_Components_Display__WEBPACK_IMPORTED_MODULE_8__","_Components_Buttons__WEBPACK_IMPORTED_MODULE_9__","React","Component","Display","_React$Component","apply","arguments","C_Users_User_JS_js_calculator_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_User_JS_js_calculator_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","value","react__WEBPACK_IMPORTED_MODULE_5___default","Buttons","onClick","Boolean","window","location","hostname","match","ReactDOM","render","react_default","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85da1e7f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Display } from './Components/Display';\nimport { Buttons } from './Components/Buttons';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: '',\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.updateDisplay = this.updateDisplay.bind(this);\n    this.solveEquation = this.solveEquation.bind(this);\n  }\n  \n  componentWillMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n  \n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n  \n  handleKeyPress(event) {\n    console.log(event);\n    if (event.key >= 0 && event.key <=9 || event.key == '/' || event.key == '-') {\n      this.updateDisplay(event.key)\n    }\n    else if (event.shiftKey && event.key === '+' || event.key === '*') {\n      this.updateDisplay(event.key)\n    } \n    else if (event.key === 'Enter' || event.key === '=' ) {\n      this.solveEquation();\n    }\n    else if (event.key === 'Backspace') {\n      this.setState({\n        display: ''\n      })\n    }\n    \n  }\n  \n  handleClick(event) {\n    if (event.target.classList.contains('number-button') || event.target.classList.contains('operand-button')) {\n      this.updateDisplay(event.target.innerText);\n    }\n    else if (event.target.classList.contains('function-button')) {\n      event.target.id === 'equals' ? this.solveEquation() : this.setState({display: ''})\n    } \n  }\n  \n  updateDisplay(info) {\n    var newDisplay = this.state.display + info\n      this.setState({\n       display: newDisplay\n      })\n  }\n  \n  solveEquation() {\n    var equation = this.state.display;\n    var result = eval(equation);\n    this.setState({\n      display: result\n    })\n    \n  }\n  \n  render(){\n    return (\n      <div className='calculator '>\n        <Display display={this.state.display} />\n        <Buttons handleClick={this.handleClick} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nexport class Display extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id='display' className='display border-sizing'>\r\n        <p className='screen border-sizing'>{this.props.display}</p>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport class Buttons extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className='keypad border-sizing'>\r\n\r\n        <div className='numbers border-sizing'>\r\n          <button id='one' className='number-button key' onClick={this.props.handleClick}>1</button>\r\n          <button id='two'  className='number-button key' onClick={this.props.handleClick}>2</button>\r\n          <button id='three'  className='number-button key' onClick={this.props.handleClick}>3</button>\r\n          <button id='four'  className='number-button key' onClick={this.props.handleClick}>4</button>\r\n          <button id='five'  className='number-button key' onClick={this.props.handleClick}>5</button>\r\n          <button id='six'  className='number-button key' onClick={this.props.handleClick}>6</button>\r\n          <button id='seven'  className='number-button key' onClick={this.props.handleClick}>7</button>\r\n          <button id='eight'  className='number-button key' onClick={this.props.handleClick}>8</button>\r\n          <button id='nine'  className='number-button key' onClick={this.props.handleClick}>9</button>\r\n        </div>\r\n          \r\n        \r\n         <button id='plus' className='operand-button plus key' onClick={this.props.handleClick}>+</button>\r\n         <button id='minus' className='operand-button minus key' onClick={this.props.handleClick}>-</button>\r\n         <button id='divide' className='operand-button divide key' onClick={this.props.handleClick}>/</button>\r\n         <button id='multiply' className='operand-button multiply key' onClick={this.props.handleClick}>*</button>\r\n        \r\n\r\n        <button id='zero'  className='number-button zero key' onClick={this.props.handleClick}>0</button>\r\n        <button id='decimal'  className='number-button decimal key' onClick={this.props.handleClick}>.</button>\r\n        <button id='equals' className='function-button equals key' onClick={this.props.handleClick}>=</button>\r\n        <button id='clear' className='function-button clear key' onClick={this.props.handleClick}>AC</button>\r\n      </div>\r\n    )\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}